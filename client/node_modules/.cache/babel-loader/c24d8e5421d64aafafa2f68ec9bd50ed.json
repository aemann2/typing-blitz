{"ast":null,"code":"var _jsxFileName = \"/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/score/Score.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport classes from './css/Score.module.scss';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\nimport useKeypress from '../../hooks/useKeypress';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst scoreVariants = {\n  hidden: {\n    y: '100vh'\n  },\n  show: {\n    y: 1,\n    transition: {\n      type: 'tween',\n      duration: 1.2\n    }\n  }\n};\n\nconst Score = () => {\n  _s();\n\n  const {\n    score,\n    setScore\n  } = useContext(ScoreContext);\n  const {\n    currentWord,\n    substring\n  } = useContext(WordsContext);\n  const {\n    isTimeOut\n  } = useContext(GameStateContext);\n  useKeypress(e => {\n    if (currentWord && !isTimeOut) {\n      // if the key is the first letter of the current word, or if the substring exists and the key is the first letter...\n      if (!substring && e.key === currentWord[0]) {\n        setScore(score + 10);\n      } else if (substring && e.key === substring[0]) {\n        setScore(score + 10);\n      } else {\n        setScore(score - 10);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(motion.h2, {\n      className: classes.score,\n      variants: scoreVariants,\n      initial: \"hidden\",\n      animate: \"show\",\n      children: [\"Score:\", score, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(Score, \"L1Y7a8YXhhwWDESuXrBxxRXJ67I=\", false, function () {\n  return [useKeypress];\n});\n\n_c = Score;\nexport default Score;\n\nvar _c;\n\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"sources":["/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/score/Score.js"],"names":["React","useContext","classes","ScoreContext","WordsContext","GameStateContext","useKeypress","motion","scoreVariants","hidden","y","show","transition","type","duration","Score","score","setScore","currentWord","substring","isTimeOut","e","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,CAAC,EAAE;AADI,GADa;AAIrBC,EAAAA,IAAI,EAAE;AACLD,IAAAA,CAAC,EAAE,CADE;AAELE,IAAAA,UAAU,EAAE;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC;AAFP;AAJe,CAAtB;;AAaA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBhB,UAAU,CAACE,YAAD,CAAtC;AACA,QAAM;AAAEe,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BlB,UAAU,CAACG,YAAD,CAA7C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAgBnB,UAAU,CAACI,gBAAD,CAAhC;AAEAC,EAAAA,WAAW,CAAEe,CAAD,IAAO;AAClB,QAAIH,WAAW,IAAI,CAACE,SAApB,EAA+B;AAC9B;AACA,UAAI,CAACD,SAAD,IAAcE,CAAC,CAACC,GAAF,KAAUJ,WAAW,CAAC,CAAD,CAAvC,EAA4C;AAC3CD,QAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACA,OAFD,MAEO,IAAIG,SAAS,IAAIE,CAAC,CAACC,GAAF,KAAUH,SAAS,CAAC,CAAD,CAApC,EAAyC;AAC/CF,QAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACA,OAFM,MAEA;AACNC,QAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACA;AACD;AACD,GAXU,CAAX;AAaA,sBACC;AAAA,2BACC,QAAC,MAAD,CAAQ,EAAR;AACC,MAAA,SAAS,EAAEd,OAAO,CAACc,KADpB;AAEC,MAAA,QAAQ,EAAER,aAFX;AAGC,MAAA,OAAO,EAAC,QAHT;AAIC,MAAA,OAAO,EAAC,MAJT;AAAA,2BAMQQ,KANR,EAMe,GANf;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAYA,CA9BD;;GAAMD,K;UAKLT,W;;;KALKS,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport classes from './css/Score.module.scss';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\nimport useKeypress from '../../hooks/useKeypress';\nimport { motion } from 'framer-motion';\n\nconst scoreVariants = {\n\thidden: {\n\t\ty: '100vh',\n\t},\n\tshow: {\n\t\ty: 1,\n\t\ttransition: {\n\t\t\ttype: 'tween',\n\t\t\tduration: 1.2,\n\t\t},\n\t},\n};\n\nconst Score = () => {\n\tconst { score, setScore } = useContext(ScoreContext);\n\tconst { currentWord, substring } = useContext(WordsContext);\n\tconst { isTimeOut } = useContext(GameStateContext);\n\n\tuseKeypress((e) => {\n\t\tif (currentWord && !isTimeOut) {\n\t\t\t// if the key is the first letter of the current word, or if the substring exists and the key is the first letter...\n\t\t\tif (!substring && e.key === currentWord[0]) {\n\t\t\t\tsetScore(score + 10);\n\t\t\t} else if (substring && e.key === substring[0]) {\n\t\t\t\tsetScore(score + 10);\n\t\t\t} else {\n\t\t\t\tsetScore(score - 10);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<motion.h2\n\t\t\t\tclassName={classes.score}\n\t\t\t\tvariants={scoreVariants}\n\t\t\t\tinitial='hidden'\n\t\t\t\tanimate='show'\n\t\t\t>\n\t\t\t\tScore:{score}{' '}\n\t\t\t</motion.h2>\n\t\t</>\n\t);\n};\n\nexport default Score;\n"]},"metadata":{},"sourceType":"module"}