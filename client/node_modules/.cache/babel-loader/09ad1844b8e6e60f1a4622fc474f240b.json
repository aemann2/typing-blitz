{"ast":null,"code":"var _jsxFileName = \"/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/utils/combineComponents.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// function to combine multiple contexts into one. adapted from:\n// https://medium.com/nerd-for-tech/how-to-combine-context-providers-for-cleaner-react-code-9ed24f20225e\nconst combineComponents = (...components) => {\n  return components.reduce((AccumulatedComponents, CurrentComponent) => {\n    return ({\n      children\n    }) => {\n      return /*#__PURE__*/_jsxDEV(AccumulatedComponents, {\n        children: /*#__PURE__*/_jsxDEV(CurrentComponent, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    };\n  }, ({\n    children\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false));\n};\n\nexport default combineComponents;","map":{"version":3,"sources":["/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/utils/combineComponents.js"],"names":["combineComponents","components","reduce","AccumulatedComponents","CurrentComponent","children"],"mappings":";;;;AAAA;AACA;AAEA,MAAMA,iBAAiB,GAAG,CAAC,GAAGC,UAAJ,KAAmB;AAC3C,SAAOA,UAAU,CAACC,MAAX,CACL,CAACC,qBAAD,EAAwBC,gBAAxB,KAA6C;AAC3C,WAAO,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACvB,0BACE,QAAC,qBAAD;AAAA,+BACE,QAAC,gBAAD;AAAA,oBAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAOD,GATI,EAUL,CAAC;AAAEA,IAAAA;AAAF,GAAD,kBAAkB;AAAA,cAAGA;AAAH,mBAVb,CAAP;AAYD,CAbD;;AAeA,eAAeL,iBAAf","sourcesContent":["// function to combine multiple contexts into one. adapted from:\n// https://medium.com/nerd-for-tech/how-to-combine-context-providers-for-cleaner-react-code-9ed24f20225e\n\nconst combineComponents = (...components) => {\n  return components.reduce(\n    (AccumulatedComponents, CurrentComponent) => {\n      return ({ children }) => {\n        return (\n          <AccumulatedComponents>\n            <CurrentComponent>{children}</CurrentComponent>\n          </AccumulatedComponents>\n        );\n      };\n    },\n    ({ children }) => <>{children}</>\n  );\n};\n\nexport default combineComponents;\n"]},"metadata":{},"sourceType":"module"}