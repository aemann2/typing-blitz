{"ast":null,"code":"var _jsxFileName = \"/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/popup/Popup.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useEffect } from 'react';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport axios from 'axios';\nimport classes from './css/Popup.module.scss';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backdropVariants = {\n  visible: {\n    opacity: 1\n  },\n  hidden: {\n    opacity: 0\n  },\n  exit: {\n    opacity: 1\n  }\n};\n\nconst Popup = () => {\n  _s();\n\n  const {\n    showPopup,\n    setShowPopup\n  } = useContext(GameStateContext);\n  const {\n    score,\n    setScore\n  } = useContext(ScoreContext);\n  const {\n    currentWord,\n    wordArray,\n    setCurrentWord\n  } = useContext(WordsContext);\n  const button = useRef(null);\n\n  async function testPost() {\n    try {\n      const res = await axios.post('/api/v1/scores', {\n        player: 'TST2',\n        score: score\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleClose = () => {\n    setShowPopup(false);\n    const wordIndex = wordArray.indexOf(currentWord);\n    setCurrentWord(wordArray[wordIndex + 1]);\n    testPost();\n    setScore(0);\n  };\n\n  useEffect(() => {\n    if (button.current) {\n      button.current.focus();\n    }\n  }, [showPopup]);\n\n  /*#__PURE__*/\n  _jsxDEV(AnimatePresence, {\n    exitBeforeEnter: true,\n    children: showPopup &&\n    /*#__PURE__*/\n    // this div represents the semi-transparent BG\n    _jsxDEV(motion.div, {\n      className: classes.backdrop,\n      variants: backdropVariants,\n      animate: \"visible\",\n      initial: \"hidden\",\n      exit: {\n        opacity: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: classes.modal,\n        initial: {\n          y: '-100vh',\n          opacity: 0\n        },\n        animate: {\n          y: '200px',\n          opacity: 1,\n          transition: {\n            delay: 0.51\n          }\n        },\n        transition: {\n          type: 'spring',\n          stiffness: 200\n        },\n        exit: {\n          y: '-100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Want to make another pizza?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            children: \"Start Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }, this); // return (\n  // \t<motion.div variants={popupVariants} initial='hidden' animate='show'>\n  // \t\t<Modal\n  // \t\t\tshow={showPopup}\n  // \t\t\tonHide={handleClose}\n  // \t\t\tbackdrop='static'\n  // \t\t\tkeyboard={false}\n  // \t\t\t// setting animation to false to avoid findDOMNode error\n  // \t\t\tanimation={true}\n  // \t\t\tcentered\n  // \t\t\tclassName={classes.modal}\n  // \t\t>\n  // \t\t\t<Modal.Header closeButton>\n  // \t\t\t\t<Modal.Title className={classes.title}>Time Up!</Modal.Title>\n  // \t\t\t</Modal.Header>\n  // \t\t\t<Modal.Body className={classes.body}>Score: {score}</Modal.Body>\n  // \t\t\t<Modal.Footer>\n  // \t\t\t\t<Button variant='primary' ref={button} onClick={handleClose}>\n  // \t\t\t\t\tPlay Again\n  // \t\t\t\t</Button>\n  // \t\t\t</Modal.Footer>\n  // \t\t</Modal>\n  // \t</motion.div>\n  // );\n\n};\n\n_s(Popup, \"v6pgoQO/WU3sGmV07s7NWmLhrhc=\");\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/popup/Popup.js"],"names":["useContext","useRef","useEffect","WordsContext","GameStateContext","ScoreContext","axios","classes","Modal","Button","motion","AnimatePresence","backdropVariants","visible","opacity","hidden","exit","Popup","showPopup","setShowPopup","score","setScore","currentWord","wordArray","setCurrentWord","button","testPost","res","post","player","console","log","error","handleClose","wordIndex","indexOf","current","focus","backdrop","modal","y","transition","delay","type","stiffness","setShowModal"],"mappings":"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","sourcesContent":["import { useContext, useRef, useEffect } from 'react';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport axios from 'axios';\nimport classes from './css/Popup.module.scss';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst backdropVariants = {\n\tvisible: { opacity: 1 },\n\thidden: { opacity: 0 },\n\texit: { opacity: 1 },\n};\n\nconst Popup = () => {\n\tconst { showPopup, setShowPopup } = useContext(GameStateContext);\n\tconst { score, setScore } = useContext(ScoreContext);\n\tconst { currentWord, wordArray, setCurrentWord } = useContext(WordsContext);\n\n\tconst button = useRef(null);\n\n\tasync function testPost() {\n\t\ttry {\n\t\t\tconst res = await axios.post('/api/v1/scores', {\n\t\t\t\tplayer: 'TST2',\n\t\t\t\tscore: score,\n\t\t\t});\n\n\t\t\tconsole.log(res);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tconst handleClose = () => {\n\t\tsetShowPopup(false);\n\t\tconst wordIndex = wordArray.indexOf(currentWord);\n\t\tsetCurrentWord(wordArray[wordIndex + 1]);\n\t\ttestPost();\n\t\tsetScore(0);\n\t};\n\n\tuseEffect(() => {\n\t\tif (button.current) {\n\t\t\tbutton.current.focus();\n\t\t}\n\t}, [showPopup]);\n\n\t<AnimatePresence exitBeforeEnter>\n\t\t{showPopup && (\n\t\t\t// this div represents the semi-transparent BG\n\t\t\t<motion.div\n\t\t\t\tclassName={classes.backdrop}\n\t\t\t\tvariants={backdropVariants}\n\t\t\t\tanimate='visible'\n\t\t\t\tinitial='hidden'\n\t\t\t\texit={{ opacity: 0 }}\n\t\t\t>\n\t\t\t\t{/* the actual modal popup */}\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName={classes.modal}\n\t\t\t\t\tinitial={{ y: '-100vh', opacity: 0 }}\n\t\t\t\t\tanimate={{ y: '200px', opacity: 1, transition: { delay: 0.51 } }}\n\t\t\t\t\ttransition={{ type: 'spring', stiffness: 200 }}\n\t\t\t\t\texit={{ y: '-100vh' }}\n\t\t\t\t>\n\t\t\t\t\t<p>Want to make another pizza?</p>\n\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t<button onClick={() => setShowModal(false)}>Start Again</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</motion.div>\n\t\t\t</motion.div>\n\t\t)}\n\t</AnimatePresence>;\n\n\t// return (\n\t// \t<motion.div variants={popupVariants} initial='hidden' animate='show'>\n\t// \t\t<Modal\n\t// \t\t\tshow={showPopup}\n\t// \t\t\tonHide={handleClose}\n\t// \t\t\tbackdrop='static'\n\t// \t\t\tkeyboard={false}\n\t// \t\t\t// setting animation to false to avoid findDOMNode error\n\t// \t\t\tanimation={true}\n\t// \t\t\tcentered\n\t// \t\t\tclassName={classes.modal}\n\t// \t\t>\n\t// \t\t\t<Modal.Header closeButton>\n\t// \t\t\t\t<Modal.Title className={classes.title}>Time Up!</Modal.Title>\n\t// \t\t\t</Modal.Header>\n\t// \t\t\t<Modal.Body className={classes.body}>Score: {score}</Modal.Body>\n\t// \t\t\t<Modal.Footer>\n\t// \t\t\t\t<Button variant='primary' ref={button} onClick={handleClose}>\n\t// \t\t\t\t\tPlay Again\n\t// \t\t\t\t</Button>\n\t// \t\t\t</Modal.Footer>\n\t// \t\t</Modal>\n\t// \t</motion.div>\n\t// );\n};\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}