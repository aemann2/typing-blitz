{"ast":null,"code":"var _jsxFileName = \"/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/timer/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useEffect } from 'react';\nimport classes from './css/Timer.module.scss';\nimport Timer from 'react-compound-timer';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const {\n    setScore\n  } = useContext(ScoreContext);\n  const {\n    setSubstring,\n    setToHighlight\n  } = useContext(WordsContext);\n  const {\n    isTimeOut,\n    setIsTimeOut,\n    setShowPopup\n  } = useContext(GameStateContext);\n  const button = useRef(null);\n  const timer = useRef(null);\n  useEffect(() => {\n    if (button.current) {\n      button.current.focus();\n    }\n  }, [isTimeOut]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      initialTime: 30000,\n      ref: timer,\n      startImmediately: false,\n      lastUnit: \"s\",\n      direction: \"backward\",\n      timeToUpdate: 100,\n      checkpoints: [{\n        time: 0,\n        callback: () => {\n          setIsTimeOut(true);\n          setShowPopup(true);\n        }\n      }],\n      children: ({\n        start,\n        reset\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: timer.current && timer.current.getTime() > 10000 ? classes.timer : classes.timerLow,\n          children: /*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isTimeOut && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.timerBtn,\n            ref: button,\n            onClick: () => {\n              // Resetting the timer and the game state //\n              reset();\n              start();\n              setIsTimeOut(false);\n              setScore(0);\n              setSubstring('');\n              setToHighlight('');\n            },\n            type: \"button\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countdown, \"Icrk0QxZL72lshp33YyQMJaR4z0=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/adammann/Desktop/Projects/Portfolio/typing-blitz/client/src/components/timer/Timer.js"],"names":["useContext","useRef","useEffect","classes","Timer","ScoreContext","WordsContext","GameStateContext","Countdown","setScore","setSubstring","setToHighlight","isTimeOut","setIsTimeOut","setShowPopup","button","timer","current","focus","time","callback","start","reset","getTime","timerLow","timerBtn"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACK,YAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAmCX,UAAU,CAACM,YAAD,CAAnD;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MACJd,UAAU,CAACO,gBAAD,CADZ;AAGA,QAAMQ,MAAM,GAAGd,MAAM,CAAC,IAAD,CAArB;AACA,QAAMe,KAAK,GAAGf,MAAM,CAAC,IAAD,CAApB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,CAACE,OAAX,EAAoB;AAClBF,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAf;AACD;AACF,GAJQ,EAIN,CAACN,SAAD,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,WAAW,EAAE,KADf;AAEE,MAAA,GAAG,EAAEI,KAFP;AAGE,MAAA,gBAAgB,EAAE,KAHpB;AAIE,MAAA,QAAQ,EAAC,GAJX;AAKE,MAAA,SAAS,EAAC,UALZ;AAME,MAAA,YAAY,EAAE,GANhB;AAOE,MAAA,WAAW,EAAE,CACX;AACEG,QAAAA,IAAI,EAAE,CADR;AAEEC,QAAAA,QAAQ,EAAE,MAAM;AACdP,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AALH,OADW,CAPf;AAAA,gBAiBG,CAAC;AAAEO,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACC;AAAA,gCACE;AACE,UAAA,SAAS,EACPN,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACC,OAAN,CAAcM,OAAd,KAA0B,KAA3C,GACIpB,OAAO,CAACa,KADZ,GAEIb,OAAO,CAACqB,QAJhB;AAAA,iCAOE,QAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBACGZ,SAAS,iBACR;AACE,YAAA,SAAS,EAAET,OAAO,CAACsB,QADrB;AAEE,YAAA,GAAG,EAAEV,MAFP;AAGE,YAAA,OAAO,EAAE,MAAM;AACb;AACAO,cAAAA,KAAK;AACLD,cAAAA,KAAK;AACLR,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,cAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,cAAAA,YAAY,CAAC,EAAD,CAAZ;AACAC,cAAAA,cAAc,CAAC,EAAD,CAAd;AACD,aAXH;AAYE,YAAA,IAAI,EAAC,QAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAtED;;GAAMH,S;;KAAAA,S;AAwEN,eAAeA,SAAf","sourcesContent":["import { useContext, useRef, useEffect } from 'react';\nimport classes from './css/Timer.module.scss';\nimport Timer from 'react-compound-timer';\nimport { ScoreContext } from '../../context/ScoreContext';\nimport { WordsContext } from '../../context/WordsContext';\nimport { GameStateContext } from '../../context/GameStateContext';\n\nconst Countdown = () => {\n  const { setScore } = useContext(ScoreContext);\n  const { setSubstring, setToHighlight } = useContext(WordsContext);\n  const { isTimeOut, setIsTimeOut, setShowPopup } =\n    useContext(GameStateContext);\n\n  const button = useRef(null);\n  const timer = useRef(null);\n\n  useEffect(() => {\n    if (button.current) {\n      button.current.focus();\n    }\n  }, [isTimeOut]);\n\n  return (\n    <div>\n      <Timer\n        initialTime={30000}\n        ref={timer}\n        startImmediately={false}\n        lastUnit='s'\n        direction='backward'\n        timeToUpdate={100}\n        checkpoints={[\n          {\n            time: 0,\n            callback: () => {\n              setIsTimeOut(true);\n              setShowPopup(true);\n            },\n          },\n        ]}\n      >\n        {({ start, reset }) => (\n          <>\n            <div\n              className={\n                timer.current && timer.current.getTime() > 10000\n                  ? classes.timer\n                  : classes.timerLow\n              }\n            >\n              <Timer.Seconds />\n            </div>\n            <div>\n              {isTimeOut && (\n                <button\n                  className={classes.timerBtn}\n                  ref={button}\n                  onClick={() => {\n                    // Resetting the timer and the game state //\n                    reset();\n                    start();\n                    setIsTimeOut(false);\n                    setScore(0);\n                    setSubstring('');\n                    setToHighlight('');\n                  }}\n                  type='button'\n                >\n                  Start\n                </button>\n              )}\n            </div>\n          </>\n        )}\n      </Timer>\n    </div>\n  );\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}